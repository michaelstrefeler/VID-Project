---
title: "Projet VID"
subtitle: "Données sur les crédits Allemands"
author:
  - name: Michael Strefeler
    email: michael.strefeler@heig-vd.ch
    affiliations:
      - name: Département TIC
highlight-style: github
format:
  html:
    theme: cosmo
    monobackgroundcolor: rgb(255,250,240)
    code-line-numbers: false
    embed-resources: true
editor: visual
toc: true
toc-title: "Table des matières"
toc-depth: 2
toc-location: left
date: 'last-modified'
date-format: '[Version du:] D MMMM, YYYY'
lang: fr
---

## Introduction

Dans ce projet il nous est demandé de trouver les variables permettant d'obtenir le meilleur modèle de régression linéaire multiple pour déterminer si c'est une bonne idée de faire un crédit bancaire à une personne.


## Analyse exploratoire des données

```{r}
df <- read.csv("data/GermanCredit.csv", header=TRUE, sep=";")

# Conversion des données catégorielles en factor
df$CHK_ACCT <- as.factor(df$CHK_ACCT)
df$HISTORY <- as.factor(df$HISTORY)
df$SAV_ACCT <- as.factor(df$SAV_ACCT)
df$EMPLOYMENT <- as.factor(df$EMPLOYMENT)
df$PRESENT_RESIDENT <- as.factor(df$PRESENT_RESIDENT)
df$JOB <- as.factor(df$JOB)
```

### Vérification des données

```{r}
library(skimr)
skim(df)
```

```{r}
#| fig-height: 40
#| fig-width: 12
#| warning: false

library(ggplot2)
library(gridExtra)

# Liste des colonnes sans "OBS."
columns_to_plot <- setdiff(names(df), c("OBS."))

# Liste des graphiques
plots <- list()

# Boucle pour faire un graphique par colonne
for (col in columns_to_plot) {
  # Création du graphique
  p <- ggplot(df, aes_string(x = col, fill = "as.factor(RESPONSE)")) +
    geom_bar() +
    ggtitle(paste("Colonne: ", col)) +
    xlab(col) +
    scale_fill_manual(values = c("0" = "#17becf", "1" = "#ff9896"), name = "RESPONSE") +
    theme_bw()
  
  # Ajout du graphique à la liste
  plots[[col]] <- p
}

# Affichage des graphiques (2 colonnes)
do.call(grid.arrange, c(plots, ncol = 2))
```

Voici les données observées que ne jouent pas avec la donnée: valeur min `DURATION` -6, `MALE_SINGLE` une valeur à 2, `GUARANTOR` -1, `PRESENT_RESIDENT` valeurs de 1 à 4 alors que la données dit valeurs 0 à 3, valeur max `AGE` 151. Pour `AGE` il y a 14 valeurs manquantes.

### Correction des erreurs dans les données

Voici les corrections validées après discussion avec le client:

`DURATION` mettre la valeur à 0, `MALE_SINGLE` mettre la valeur à 1, `GUARANTOR` 1, garder `PRESENT_RESIDENT` comme ça parce que c'est plus efficace, `AGE` 151 mettre à 75, pour ce qui est des valeurs manquantes on a plusieurs options: ne rien faire; faire médiane ou utiliser des manières plus compliquées pour trouver la valeur à mettre; supprimer les données.

Puisque les données manquantes sont à des endroits aléatoires je vais choisir la première option qui est de ne rien faire.

Pour corriger ces erreurs j'ai décider de créer un nouveau fichier `GermanCreditCorrected.csv` parce qu'il n'y a pas beaucoup de changements à faire et parce que c'est plus simple que de modifier les données en ***R***. Cette manière de faire nous permet aussi de garder une trace des données originales.

```{r}
df <- read.csv("data/GermanCreditCorrected.csv", header=TRUE, sep=";")

# Conversion des données catégorielles en factor
df$CHK_ACCT <- as.factor(df$CHK_ACCT)
df$HISTORY <- as.factor(df$HISTORY)
df$SAV_ACCT <- as.factor(df$SAV_ACCT)
df$EMPLOYMENT <- as.factor(df$EMPLOYMENT)
df$PRESENT_RESIDENT <- as.factor(df$PRESENT_RESIDENT)
df$JOB <- as.factor(df$JOB)
```


## Premier modèle de régression multiple

```{r}
df.lm <- glm(formula = RESPONSE ~ . - OBS., data = df, family=binomial())
summary(df.lm)
```

## Recherche du meilleur modèle

Puisqu'on utilise un glm (*Genearlized Linear Model*) on ne peut pas utiliser la librairie `leaps` ou des autres techniques qu'on a vu dans les travaux pratiques précédents.

Il suffit de regarder la sortie du premier modèle pour savoir quelles variables sont significatives.

Voici la liste de celles que j'ai trouvé:
"CHK_ACCT2", "CHK_ACCT3", "DURATION", "HISTORY3", "HISTORY4", 
"NEW_CAR", "AMOUNT", "SAV_ACCT3", "SAV_ACCT4", "INSTALL_RATE",                     "MALE_SINGLE", "GUARANTOR", "PRESENT_RESIDENT2", "OTHER_INSTALL", "FOREIGN"

Voici le modèle en question

```{r}
other_model <- glm(formula = RESPONSE ~ CHK_ACCT + HISTORY + DURATION + NEW_CAR + AMOUNT + SAV_ACCT + INSTALL_RATE + MALE_SINGLE + GUARANTOR + PRESENT_RESIDENT + OTHER_INSTALL + FOREIGN, data = df, family=binomial())
summary(other_model)
```

```{r}
library(performance)
compare_performance(df.lm, other_model, rank=TRUE, verbose=FALSE)
```

