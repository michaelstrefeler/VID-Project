---
title: "Projet VID"
subtitle: "Données sur les crédits Allemands"
author:
  - name: Michael Strefeler
    email: michael.strefeler@heig-vd.ch
    affiliations:
      - name: Département TIC
highlight-style: github
format:
  html:
    theme: cosmo
    monobackgroundcolor: rgb(255,250,240)
    code-line-numbers: false
    embed-resources: true
editor: visual
toc: true
toc-title: "Table des matières"
toc-depth: 2
toc-location: left
date: 'last-modified'
date-format: '[Version du:] D MMMM, YYYY'
lang: fr
---

## Introduction

Dans ce projet il nous est demandé de trouver les variables permettant d'obtenir le meilleur modèle de régression linéaire multiple pour déterminer si c'est une bonne idée de faire un crédit bancaire à une personne.


## Analyse exploratoire des données

```{r}
df <- read.csv("data/GermanCredit.csv", header=TRUE, sep=";")

# Conversion des données catégorielles en factor
df$CHK_ACCT <- as.factor(df$CHK_ACCT)
df$HISTORY <- as.factor(df$HISTORY)
df$SAV_ACCT <- as.factor(df$SAV_ACCT)
df$EMPLOYMENT <- as.factor(df$EMPLOYMENT)
df$PRESENT_RESIDENT <- as.factor(df$PRESENT_RESIDENT)
df$JOB <- as.factor(df$JOB)
```

### Vérification des données

```{r}
summary(df)
```

```{r}
#| fig-height: 40
#| fig-width: 12
#| warning: false

library(ggplot2)
library(gridExtra)

# Liste des colonnes sans "OBS."
columns_to_plot <- setdiff(names(df), c("OBS."))

# Liste des graphiques
plots <- list()

# Boucle pour faire un graphique par colonne
for (col in columns_to_plot) {
  # Création du graphique
  p <- ggplot(df, aes_string(x = col)) +
    geom_bar() +
    ggtitle(paste("Colonne: ", col)) +
    xlab(col) +
    theme_minimal()
  
  # Ajout du graphique à la liste
  plots[[col]] <- p
}

# Affichage des graphiques (2 colonnes)
do.call(grid.arrange, c(plots, ncol = 2))
```

Voici les données observées que ne jouent pas avec la donnée: valeur min `DURATION` -6?, `MALE_SINGLE` une valeur à 2, `GUARANTOR` -1, `PRESENT_RESIDENT` valeurs de 1 à 4 alors que la données dit valeurs 0 à 3, valeur max `AGE` 151. Pour `AGE` il y a 14 valeurs manquantes.

Voici les corrections validées par le client:

### Correction des erreurs dans les données

```{r}

```


## Premier modèle de régression multiple

```{r}
df.lm <- lm(formula = RESPONSE ~ . - OBS., data = df)
summary(df.lm)
```

```{r}
#| warning: false
#| fig-height: 7
library(ggResidpanel)
resid_interact(df.lm, plots = c("resid", "qq", "cookd", "boxplot"))
```

## Recherche du meilleur modèle

[link](https://towardsdatascience.com/selecting-the-best-predictors-for-linear-regression-in-r-f385bf3d93e9)

```{{r}}
library(leaps)
Best_Subset <- regsubsets(RESPONSE~., data = df, nbest = 1, nvmax = NULL, force.in = NULL, force.out =  "OBS.", method = "exhaustive")
summary_best_subset <- summary(regsubsets.out)
as.data.frame(summary_best_subset$outmat)
which.max(summary_best_subset$adjr2)
summary_best_subset$which[13,]
```

[Source](http://www.sthda.com/english/articles/37-model-selection-essentials-in-r/155-best-subsets-regression-essentials-in-r/)
```{{r}}
library(leaps)
models <- regsubsets(RESPONSE ~ ., data=df, nvmax=NULL, force.out = "OBS.")
summary(models)
res.sum <- summary(models)
data.frame(
  Adj.R2 = which.max(res.sum$adjr2),
  CP = which.min(res.sum$cp),
  BIC = which.min(res.sum$bic)
)
```

```{{r}}
get_model_formula <- function(id, object, outcome){
  # get models data
  models <- summary(object)$which[id,-1]
  # Get outcome variable
  form <- as.formula(object$call[[2]])
  outcome <- all.vars(form)[1]
  # Get model predictors
  predictors <- names(which(models == TRUE))
  predictors <- paste(predictors, collapse = "+")
  # Build model formula
  as.formula(paste0(outcome, "~", predictors))
}

#lm10 <- lm(get_model_formula(10, models, "RESPONSE"), data=df)
#summary(lm10)

#lm18 <- lm(get_model_formula(18, models, "RESPONSE"), data=df)
#summary(lm18)

#lm23 <- lm(get_model_formula(23, models, "RESPONSE"), data=df)
#summary(lm23)
```


